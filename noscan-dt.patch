--- hostap/src/ap/hw_features.c	2022-09-02 12:08:24.137339534 -0300
+++ hostap-patched/src/ap/hw_features.c	2022-09-05 13:34:36.971477476 -0300
@@ -517,7 +517,7 @@
 	int ret;
 
 	/* Check that HT40 is used and PRI / SEC switch is allowed */
-	if (!iface->conf->secondary_channel || iface->conf->no_pri_sec_switch)
+	if (!iface->conf->secondary_channel || iface->conf->no_pri_sec_switch || iface->conf->noscan)
 		return 0;
 
 	hostapd_set_state(iface, HAPD_IFACE_HT_SCAN);
--- hostap/src/ap/ieee802_11_ht.c	2022-09-02 12:08:24.142339534 -0300
+++ hostap-patched/src/ap/ieee802_11_ht.c	2022-09-05 13:31:58.558615160 -0300
@@ -230,6 +230,9 @@
 		return;
 	}
 
+    if (iface->conf->noscan)
+        return;
+
 	if (len < IEEE80211_HDRLEN + 2 + sizeof(*bc_ie)) {
 		wpa_printf(MSG_DEBUG,
 			   "Ignore too short 20/40 BSS Coexistence Management frame");
@@ -390,6 +393,9 @@
 	if (iface->current_mode->mode != HOSTAPD_MODE_IEEE80211G)
 		return;
 
+    if (iface->conf->noscan)
+        return;
+
 	wpa_printf(MSG_INFO, "HT: Forty MHz Intolerant is set by STA " MACSTR
 		   " in Association Request", MAC2STR(sta->addr));
 
--- hostap/hostapd/config_file.c	2022-09-02 12:08:24.083339532 -0300
+++ hostap-patched/hostapd/config_file.c	2022-09-05 13:40:43.547929854 -0300
@@ -2867,6 +2867,8 @@
 				   line, bss->wpa_deny_ptk0_rekey);
 			return 1;
 		}
+    } else if (os_strcmp(buf, "noscan") == 0) {
+        conf->noscan = atoi(pos);
 	} else if (os_strcmp(buf, "wpa_group_update_count") == 0) {
 		char *endp;
 		unsigned long val = strtoul(pos, &endp, 0);
@@ -3439,6 +3441,8 @@
 		if (bss->ocv && !bss->ieee80211w)
 			bss->ieee80211w = 1;
 #endif /* CONFIG_OCV */
+    } else if (os_strcmp(buf, "noscan") == 0) {
+        conf->noscan = atoi(pos);
 	} else if (os_strcmp(buf, "ieee80211n") == 0) {
 		conf->ieee80211n = atoi(pos);
 	} else if (os_strcmp(buf, "ht_capab") == 0) {
--- hostap/src/ap/ap_config.h	2023-06-28 20:00:04.078205966 -0300
+++ hostap-patched/src/ap/ap_config.h	2023-06-28 20:20:20.172301539 -0300
@@ -1072,6 +1072,7 @@ struct hostapd_config {
 
 	int ht_op_mode_fixed;
 	u16 ht_capab;
+	int noscan;
 	int ieee80211n;
 	int secondary_channel;
 	int no_pri_sec_switch;
--- hostap/src/ap/hw_features.c	2023-06-28 20:00:04.082206213 -0300
+++ hostap-patched/src/ap/hw_features.c	2023-06-28 20:29:45.821146586 -0300
@@ -987,7 +987,7 @@ static int hostapd_is_usable_chans(struc
 	if (!hostapd_is_usable_punct_bitmap(iface))
 		return 0;
 
-	if (!iface->conf->secondary_channel)
+	if (!iface->conf->secondary_channel || iface->conf->noscan)
 		return 1;
 
 	err = hostapd_is_usable_chan(iface, iface->freq +
